<snippet>
  <content><![CDATA[

namespace Drupal\\${1:MODULE}\Form;

use Drupal\Core\DependencyInjection\ContainerInjectionInterface;
use Drupal\Core\Form\FormInterface;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\StringTranslationTrait;
use Drupal\Core\StringTranslation\TranslationInterface;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * [DESCRIPTION].
 */
class ${TM_FILENAME/(\w+)\.php/\1/g} implements FormInterface, ContainerInjectionInterface {

  use StringTranslationTrait;

  /**
   * The language manager service.
   *
   * @var \Drupal\Core\Language\LanguageManagerInterface
   */
  protected \$languageManager;

  /**
   * Constructs a form instance.
   *
   * @param \Drupal\Core\StringTranslation\TranslationInterface \$string_translation
   *   The string translation service.
   */
  public function __construct(TranslationInterface \$string_translation) {
    \$this->stringTranslation = \$string_translation;
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface \$container) {
    return new static(
      \$container->get('string_translation')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function getFormId() {
    return '${1:MODULE}_[ID]';
  }

  /**
   * {@inheritdoc}
   */
  public function buildForm(array \$form, FormStateInterface \$form_state) {

    return \$form;
  }

  /**
   * {@inheritdoc}
   */
  public function validateForm(array &\$form, FormStateInterface \$form_state) {}

  /**
   * {@inheritdoc}
   */
  public function submitForm(array &\$form, FormStateInterface \$form_state) {
  }

}


]]></content>
  <tabTrigger>form</tabTrigger>
  <scope>source.php</scope>
  <description>D8 form</description>
</snippet>

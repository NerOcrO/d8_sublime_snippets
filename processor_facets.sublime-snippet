<snippet>
    <content><![CDATA[

namespace Drupal\\${1:MODULE}\Plugin\facets\processor;

use Drupal\Core\Entity\EntityTypeManagerInterface;
use Drupal\Core\Plugin\ContainerFactoryPluginInterface;
use Drupal\facets\FacetInterface;
use Drupal\facets\Processor\BuildProcessorInterface;
use Drupal\facets\Processor\ProcessorPluginBase;
use Symfony\Component\DependencyInjection\ContainerInterface;

/**
 * Affiche [DESCRIPTION].
 *
 * @FacetsProcessor(
 *   id = "${1:MODULE}_[MACHINE_NAME]",
 *   label = @Translation("[PROJECT_NAME] : [LABEL]"),
 *   description = @Translation("Affiche [DESCRIPTION]."),
 *   stages = {
 *     "build" = 5
 *   }
 * )
 */
class [CLASS_NAME]Processor extends ProcessorPluginBase implements BuildProcessorInterface, ContainerFactoryPluginInterface {

  /**
   * The entity type manager.
   *
   * @var \Drupal\Core\Entity\EntityTypeManagerInterface
   */
  protected \$entityTypeManager;

  /**
   * Constructs a facets processor instance.
   *
   * @param array \$configuration
   *   A configuration array containing information about the plugin instance.
   * @param string \$plugin_id
   *   The plugin_id for the plugin instance.
   * @param mixed \$plugin_definition
   *   The plugin implementation definition.
   * @param \Drupal\Core\Entity\EntityTypeManagerInterface \$entity_type_manager
   *   The entity type manager.
   */
  public function __construct(array \$configuration, \$plugin_id, \$plugin_definition, EntityTypeManagerInterface \$entity_type_manager) {
    parent::__construct(\$configuration, \$plugin_id, \$plugin_definition);
    \$this->entityTypeManager = \$entity_type_manager;
  }

  /**
   * {@inheritdoc}
   */
  public static function create(ContainerInterface \$container, array \$configuration, \$plugin_id, \$plugin_definition) {
    return new static(
      \$configuration,
      \$plugin_id,
      \$plugin_definition,
      \$container->get('entity_type.manager')
    );
  }

  /**
   * {@inheritdoc}
   */
  public function build(FacetInterface \$facet, array \$results) {
    /** @var \Drupal\facets\Result\ResultInterface \$result */
    foreach (\$results as \$result) {
      /** @var Drupal\taxonomy\TermInterface \$term */
      \$term = \$this->entityTypeManager->getStorage('taxonomy_term')->load(\$result->getRawValue());

      if (\$term) {
        \$result->setDisplayValue(\$term->label());
      }
    }

    return \$results;
  }

}

]]></content>
    <tabTrigger>d8processor_facets_</tabTrigger>
    <scope>source.php</scope>
    <description>D8 processor facets</description>
</snippet>
